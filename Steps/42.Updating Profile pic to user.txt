1.instagram\src\components\screens\Profile.js



import React,{ useState, useEffect,useContext } from 'react'
import { UserContext } from '../../App'

const Profile = () => {
    const [mypic,setMypic]=useState([])

    const [image, setImage] = useState("")
    const [url, setUrl] = useState("")


    const {state,dispatch} = useContext(UserContext)
    console.log(state)

useEffect(() =>{
    fetch("/mypost",{
        headers: {
            "Authorization": "Bearer " + localStorage.getItem("jwt")
        }
    }).then((res) => res.json())
        .then(result => {
            console.log("res",result)
            setMypic(result.result)
           
        })
},[])
**************************
useEffect(()=>{
    if(image){
        const data = new FormData()
        data.append('file', image)
        data.append('upload_preset', "insta-clone")
        data.append('cloud_name', "gourab")
        const res = fetch("https://api.cloudinary.com/v1_1/gourab/image/upload", {
            method: "post",
            body: data
        })
            .then(res => res.json())
            .then(data => {
                setUrl(data.url)
                console.log(data)
                localStorage.setItem("user",JSON.stringify({...state,pic:data.url}))
                dispatch({type:"UPDATEPIC",payload:data.url})
            })
            .catch(err => {
                console.log(err)
            })
    }

},[image])

const updatephoto=(file)=>{
    setImage(file)
}

*****************************
    return (
        <div style={{maxWidth:"80%",margin:"0px auto"}}>
            <div style={{
                display: 'flex',
                justifyContent:'space-around',
                margin:'30px auto',
                width:'70%', height: 'auto', align:'center',
                borderBottom:'1px solid gray'
                
            }}>

            ***************************
                <div>
                    <img className="img-border" src={state?state.pic:"loading"} style={{ width: '160px', height: '160px', borderRadius: "80px" }} />

                    <div className="file-field input-field">
                        <div className="btn #64b5f6 blue darken-1">
                            <span>Upload pic</span>
                            <input type="file" onChange={(e) => updatephoto(e.target.files[0])} />
                        </div>
                        <div className="file-path-wrapper">
                            <input className="file-path validate" type="text" />
                        </div>
                    </div>

                </div>


                *********************
                <div>
                    <h4>{state?state.name:"loading"}</h4>
                    <h5>{state?state.email:"loading"}</h5>
                    <div style={{ display: 'flex',justifyContent:"space-between",width:"108%"}}>
                       <h6>{mypic.length} posts</h6>
                       <h6>{state?state.followers.length:"0"} followers</h6>
                       <h6>{state?state.following.length:"0"} following</h6>
                    </div>
                </div>
            </div>
            <div className="gallery">
                {
                    mypic.map(item=>{
                        return(
                            <img className="item" src={item.photo} key={item._id}/>
                        )
                    })
                }
            

            </div>
        </div>
    )
}

export default Profile


2.instagram\src\components\reducer\userReducer.js

export const initialState =null


export const reducer=(state,action)=>{
    if(action.type ==="USER"){
        //console.log("action.payload",action.payload)
        return action.payload
    }
    if(action.type ==="CLEAR"){
        return null;
    }
    if(action.type==="UPDATE"){
        return {
            ...state,
            followers:action.payload.followers,
            following:action.payload.following
        }
    }
    if(action.type=="UPDATEPIC"){
        return {
            ...state,
            pic:action.payload
        }
    }

    return state
}